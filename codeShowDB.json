{
  "code": {
    "UseRedocertodolist": "import { useRef, useReducer } from \"react\";\n  import { TodoRedocer } from \"./TodoRedocer\";\n  import UseRedocerTask from \"./UseRedocerTask\";\n  \n  function UseRedocertodolist() {\n    const input = useRef();\n    const [state, dispach] = useReducer(TodoRedocer, {\n      newtodo: \"\",\n      toDos: [],\n      selectedTodo: \"\",\n    });\n    return (\n      <>\n        <h1 className=\"main-heder\">todolist(useReducer)</h1>\n        <h2 className=\"side-heder\">add todo</h2>\n  \n        <input type=\"text\" ref={input} className=\"input=primary bg-gray-300 \" />\n  \n        <button\n          onClick={() =>\n            dispach({ type: \"addTodo\", newtodo: input.current?.value })\n          }\n          className=\"btn-primary m-7\"\n        >\n          add todo\n        </button>\n        <button onClick={() => console.log(state)}> console.log(state)</button>\n        <div className=\"flex flex-col w-20 gap-3 flex-wrap\">\n          {state.toDos.map((todo) => {\n            return (\n              <UseRedocerTask\n                key={todo.id}\n                removeTodo={() =>\n                  dispach({ type: \"removeTodo\", selectedTodo: todo })\n                }\n                todo={todo}\n              />\n  \n        \n            );\n          })}\n        </div>\n      </>\n    );\n  }\n  \n  export default UseRedocertodolist;\n  ;",
    "TodoRedocer": "const num = Math.random() * 1000;\nexport function TodoRedocer(state, action) {\n  switch (true) {\n    case action.type === \"addTodo\":\n      return {\n        newtodo: action.newtodo,\n        toDos: [\n          ...state.toDos,\n          { id: Math.floor(Math.random() * 1000), value: action.newtodo },\n        ],\n      };\n\n    case action.type === \"removeTodo\":\n      return {\n        toDos: state.toDos.filter((element) => element.id !== action.selectedTodo.id),\n      };\n\n    default:\n      return state;\n  }\n}",
    "UseRedocerTask": "import React from \"react\";\n\nfunction UseRedocerTask({ todo, removeTodo }) {\n  return (\n    \n      <button\n        onClick={() => removeTodo()}\n       key={todo.id}\n        className=\"btn-primary\"\n      >\n        {todo.value} {todo.id}\n      </button>\n    \n  );\n}\n\nexport default UseRedocerTask;\n",
    "Reducer": " export function reducer(state, action) {\n    // we can  make manipultion on the state obj ,depending on the needed action .\n  switch (true) {\n    \n    case action.type === \"incremented_age\":\n      return {\n        age: state.age + 1,\n        \n        Name: state.Name,\n      };\n\n    case action.type === \"deincremented_age\":\n      return {\n        age: state.age - 1,\n        Name: state.Name,\n      };\n\n\n    // in the folowing case we can see that we just need to render a new value\n    case action.type === \"renderChange\":\n      return {\n        age: state.age,\n        // after we set the new value for action.name in the dispach func \n        Name: action.Name,\n       \n\n      };\n     \n\n    default:\n      throw Error(\"Unknown action.\");\n  }\n}",
    
    "Counter": "import {reducer }from \"./Reducer\"\nimport { useReducer, useRef } from \"react\";\n\nfunction Counter() {\n  const input = useRef();\n  //  first var is the state sec var is a func that active the swichCase and setting the action\n  // call the spesific reducer func\n  // choose inital value for ech var\n  const [state, dispatch] = useReducer(reducer, {\n    age: 42,\n    Name: \"initial value\",\n  \n  });\n  return (\n    <>\n      <button\n        onClick={() => {\n          // heare we seting in the action obj the type of the opertion\n          dispatch({ type: \"incremented_age\" });\n        }}\n        className=\"btn-primary\"\n      >\n        Increment age\n      </button>\n\n      <div>state.age= {state.age}</div>\n      <button\n        onClick={() => {\n          dispatch({ type: \"deincremented_age\" });\n        }}\n        className=\"btn-primary\"\n      >\n        deincremented_age\n      </button>\n      <input\n        type=\"text\"\n        ref={input}\n        className=\"input-primary w-20 bg-slate-400\"\n      />\n      <div>state.Name= {state.Name}</div>\n\n      <button\n        onClick={() => {\n        // changing  the the value on the name in the action obj to acecs it in the redocer\n          dispatch({ type: \"renderChange\", Name: input.current.value });\n        }}\n        className=\"btn-primary\"\n      >\n        nextname\n      </button>\n      <button\n        onClick={() => {\n          console.log(state);\n        }}\n        className=\"btn-primary\"\n      >\n        print state\n      </button>\n      \n\n      {/* why the defultvalue dont change when we use the dispach func renderChange  */}\n    </>\n  );\n}\nexport default Counter;\n",
    
    "Hearo": "export default function Hearo() {\n  const [displaycode, setDisplaycode] = useState(true);\n\n  if (displaycode) {\n    return (\n      <>\n        <div className=\"bg-white \">\n          {/* check if the toggle will Efect the other componenets  */}\n        <ToggleSwich setDisplaycode={setDisplaycode} displaycode={displaycode} />\n\n          <div className=\"fix  px-6 pt-14 lg:px-8\">\n            <div\n              className=\" absolute inset-x-0 -top-30  transform-gpu overflow-hidden blur-3xl sm:-top-80\"\n              aria-hidden=\"true\"\n            >\n              <div\n                className=\"relative left-[calc(50%-11rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30 sm:left-[calc(50%-30rem)] sm:w-[72.1875rem]\"\n                style={{\n                  clipPath:\n                    \"polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)\",\n                }}\n              />\n            </div>\n            <div className=\"mx-auto max-w-xl py-32 sm:py-48 lg:py-56\">\n              <div className=\" sm:mb-8 sm:flex sm:justify-center\">\n                <div className=\"relative rounded-full px-3 py-1 text-sm leading-6 text-gray-600 ring-1 ring-gray-900/10 hover:ring-gray-900/20\">\n                  Announcing our next round of funding.{\" \"}\n                  <a href=\"#\" className=\"font-semibold text-indigo-600\">\n                    <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                    Read more <span aria-hidden=\"true\">&rarr;</span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <h1 className=\"text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl\">\n                  Data to enrich your online business\n                </h1>\n                <p className=\"mt-6 text-lg leading-8 text-gray-600\">\n                  Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure\n                  qui lorem cupidatat commodo. Elit sunt amet fugiat veniam\n                  occaecat fugiat aliqua.\n                </p>\n                <div className=\"mt-10 flex items-center justify-center gap-x-6\">\n                  <Link\n                    to={\"Aboutus\"}\n                    className=\" rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                  >\n                    About Us\n                  </Link>\n\n                  <Link\n                    to={\"Aboutus\"}\n                    className=\"text-sm font-semibold leading-6 text-gray-900\"\n                  >\n                    read more . . .\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"absolute inset-x-0 top-[calc(100%-13rem)] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-30rem)]\"\n              aria-hidden=\"true\"\n            >\n              <div\n                className=\"relative left-[calc(50%+3rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30 sm:left-[calc(50%+36rem)] sm:w-[72.1875rem]\"\n                style={{\n                  clipPath:\n                    \"polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)\",\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }",
    "ChangePicture": "<div\n          className=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col\"\n          data-testid=\"flowbite-card\"\n        >\n          <div className=\"flex h-full flex-col justify-center gap-4 p-6\">\n            <div className=\"items-center sm:flex sm:space-x-4 xl:block xl:space-x-0 2xl:flex 2xl:space-x-4\">\n              <img\n                alt=\"\"\n                src=\"https://rb.gy/0t2u0m\"\n                className=\"mb-4 h-28 w-28 rounded-lg sm:mb-0 xl:mb-4 2xl:mb-0\"\n              />\n\n              <div>\n                <h3 className=\"mb-1 text-2xl font-bold text-gray-900 dark:text-white\">\n                  Jese Leos\n                </h3>\n                <div className=\"mb-4 text-base font-normal text-gray-500 dark:text-gray-400\">\n                  Software Engineer\n                </div>\n                <button>change picture</button>\n              </div>\n            </div>\n          </div>\n        </div>",
    "ChangeLangTime": "<form\n          className=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col\"\n          data-testid=\"flowbite-card\"\n          onSubmit={handleSubmit((data) => console.log(data))}\n        >\n          <div className=\"flex h-full flex-col justify-center gap-4 p-6\">\n            <h3 className=\"text-xl font-bold dark:text-white\">\n              Language & Time\n            </h3>\n\n            {/* <!-- Language Selection --> */}\n            <div className=\"mb-1 grid grid-cols-1 gap-y-2\">\n              <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                Select language\n              </label>\n              <div className=\"flex\">\n                <div className=\"relative w-full\">\n                  <select\n                    className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                    id=\"settings-language\"\n                    name=\"Language\"\n                    {...register(\"Language\")}\n                  >\n                    <option>English (US)</option>\n                    <option>Italiano</option>\n                    <option>Français (France)</option>\n                    <option>正體字</option>\n                    <option>Español (España)</option>\n                    <option>Deutsch</option>\n                    <option>Português (Brasil)</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            {/* <!-- Timezone Selection --> */}\n            <div className=\"mb-3 grid grid-cols-1 gap-y-2\">\n              <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                Time Zone\n              </label>\n              <div className=\"flex\">\n                <div className=\"relative w-full\">\n                  <select\n                    className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                    id=\"timezone\"\n                    name=\"settings-timezone\"\n                    {...register(\"timezone\")}\n                  >\n                    <option>GMT+0 Greenwich Mean Time (GMT)</option>\n                    <option>GMT+1 Central European Time (CET)</option>\n                    <option>GMT+2 Eastern European Time (EET)</option>\n                    <option>GMT+3 Moscow Time (MSK)</option>\n                    <option>GMT+5 Pakistan Standard Time (PKT)</option>\n                    <option>GMT+8 China Standard Time (CST)</option>\n                    <option>\n                      GMT+10 Eastern Australia Standard Time (AEST)\n                    </option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            {/* <!-- Save Button --> */}\n            <button type=\"submit\">save Data</button>\n          </div>\n        </form>\n      </>",
    "ChangePassword": "import { useForm } from \"react-hook-form\";\n\nimport CodeShowCase from \"../CodeShowCase\";\nimport ToggleSwich from \"../ToggleSwich\";\n\n\nfunction ChangePassword() {\n  const {\n    watch,\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm();\n\n  const [Password, setPassword] = useState(\"\");\n\n  const handleSubmitedForm = (data) => {\n    setPassword(data);\n\n\n  };\n  return(\n  <>\n\n\n\n        <div\n          className=\"flex rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col\"\n          data-testid=\"flowbite-card\"\n        >\n          <div className=\"flex h-full flex-col justify-center gap-4 p-6\">\n            <h3 className=\"mb-4 text-xl font-bold dark:text-white\">\n              Password information\n            </h3>\n            <form onSubmit={handleSubmit((data) => handleSubmitedForm(data))}>\n              <div className=\"grid grid-cols-6 gap-6\">\n                {/* <!-- Current Password --> */}\n                <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                  <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                    Current password\n                  </label>\n                  <div className=\"flex\">\n                    <div className=\"relative w-full\">\n                      <input\n                        className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                        id=\"current-password\"\n                        name=\"current-password\"\n                        placeholder=\"••••••••\"\n                        type=\"password\"\n                        {...register(\"current-password\")}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* <!-- New Password --> */}\n                <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                  <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                    New password\n                  </label>\n                  <div className=\"flex\">\n                    <div className=\"relative w-full\">\n                      <input\n                        className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                        name=\"new-password\"\n                        placeholder=\"••••••••\"\n                        type=\"password\"\n                        {...register(\"new-password\")}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* <!-- Confirm Password --> */}\n                <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                  <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                    Confirm password\n                  </label>\n                  {errors.confirm_password?.message && (\n                    <span className=\"text-red-500\">\n                      {errors.confirm_password.message}\n                    </span>\n                  )}\n\n                  <div className=\"flex\">\n                    <div className=\"relative w-full\">\n                      <input\n                        className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                        name=\"confirm-password\"\n                        placeholder=\"••••••••\"\n                        type=\"password\"\n                        {...register(\"confirm_password\", {\n                          required: \"password is requierd\",\n                          validate: {\n                            consfirmPassword: (v) => {\n                              if (watch(\"new-password\") !== v) {\n                                return \"the password isnt mach \";\n                              }\n                            },\n                          },\n                        })}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                {/* <!-- Password Requirements --> */}\n                <div className=\"col-span-full\">\n                  <div className=\"text-sm font-medium dark:text-white\">\n                    Password requirements:\n                  </div>\n                  <div className=\"mb-1 text-sm font-normal text-gray-500 dark:text-gray-400\">\n                    Ensure that these requirements are met:\n                  </div>\n                  <ul className=\"space-y-1 pl-4 text-gray-500 dark:text-gray-400\">\n                    <li className=\"text-xs font-normal\">\n                      At least 10 characters (and up to 100 characters)\n                    </li>\n                    <li className=\"text-xs font-normal\">\n                      At least one lowercase character\n                    </li>\n                    <li className=\"text-xs font-normal\">\n                      Inclusion of at least one special character, e.g., ! @ # ?\n                    </li>\n                    <li className=\"text-xs font-normal\">\n                      Some text here zoltan\n                    </li>\n                  </ul>\n                </div>\n\n                {/* <!-- Save Button --> */}\n                <div className=\"col-span-6\">\n                  <button\n                    className=\"text-black bg-primary-700 hover:bg-primary-800 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark: focus:ring-primary-800 focus:!ring-2 p-0 font-medium rounded-lg \"\n                    type=\"submit\"\n                  >\n                    <span className=\"flex items-center rounded-md text-sm px-3 py-2\">\n                      Save all\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </form>\n            <button\n              onClick={() => console.log(Password)}\n              className=\"primay-btn\"\n            >\n              test\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }",
    "GeneralInformation": "import { useForm } from \"react-hook-form\";\n          import CodeShowCase from \"../CodeShowCase\";\n          import ToggleSwich from \"../ToggleSwich\";\n          import { useState } from \"react\";\n          \n          function GeneralInformation() {\n            const {\n              handleSubmit,\n              register,\n              formState: { errors },\n            } = useForm();\n          \n            const [displaycode, setDisplaycode] = useState(true);\n            if (displaycode) {\n              return (\n                <>\n                  <ToggleSwich\n                    setDisplaycode={setDisplaycode}\n                    displaycode={displaycode}\n                  />\n          \n                  <div className=\"flex h-full flex-col justify-center gap-4 p-6 dark:bg-gray-800\">\n                    <h3 className=\"mb-4 text-xl font-bold dark:text-white\">\n                      General information\n                    </h3>\n                    <form onSubmit={handleSubmit((data) => console.log(data))}>\n                      <div className=\"grid grid-cols-6 gap-6\">\n                        {/* <!-- First Name --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            First Name\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"firstName\"\n                                name=\"firstName\"\n                                placeholder=\"Bonnie\"\n                                required=\"\"\n                                {...register(\"firstName\")}\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- Last Name --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            Last Name\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"lastName\"\n                                name=\"lastName\"\n                                placeholder=\"Green\"\n                                required=\"\"\n                                {...register(\"lastName\")}\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- Country --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            Country\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"country\"\n                                name=\"country\"\n                                placeholder=\"United States\"\n                                {...register(\"country\")}\n                                required=\"\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- City --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            City\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"city\"\n                                name=\"city\"\n                                placeholder=\"San Francisco\"\n                                required=\"\"\n                                {...register(\"city\")}\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- Address --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            Address\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"address\"\n                                name=\"address\"\n                                placeholder=\"California\"\n                                {...register(\"address\")}\n                                required=\"\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- Email --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            Email\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"email\"\n                                name=\"email\"\n                                placeholder=\"example@company.com\"\n                                required=\"\"\n                                {...register(\"email\")}\n                                type=\"email\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- Phone Number --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            Phone Number\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"phone-number\"\n                                name=\"phone-number\"\n                                placeholder=\"e.g., +(12)3456 789\"\n                                required=\"\"\n                                type=\"tel\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- Birthday --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            Birthday\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"birthday\"\n                                name=\"birthday\"\n                                placeholder=\"e.g., 15/08/1990\"\n                                required=\"\"\n                                type=\"date\"\n                                {...register(\"birthday\")}\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- Organization --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            Organization\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"organization\"\n                                name=\"organization\"\n                                placeholder=\"Company name\"\n                                required=\"\"\n                                {...register(\"organization\")}\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- Role --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            Role\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"role\"\n                                name=\"role\"\n                                placeholder=\"React Developer\"\n                                required=\"\"\n                                {...register(\"role\")}\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- Department --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            Department\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"department\"\n                                name=\"department\"\n                                placeholder=\"Development\"\n                                {...register(\"department\")}\n                                required=\"\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- ZIP/Postal Code --> */}\n                        <div className=\"col-span-6 grid grid-cols-1 gap-y-2 sm:col-span-3\">\n                          <label className=\"text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            ZIP/postal code\n                          </label>\n                          <div className=\"flex\">\n                            <div className=\"relative w-full\">\n                              <input\n                                className=\"block w-full border disabled:cursor-not-allowed disabled:opacity-50 bg-gray-50 border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500 rounded-lg p-2.5 text-sm\"\n                                id=\"zip\"\n                                name=\"zip\"\n                                placeholder=\"12345\"\n                                required=\"\"\n                                {...register(\"zip\")}\n                              />\n                            </div>\n                          </div>\n                        </div>\n          \n                        {/* <!-- Save Button --> */}\n                        <div className=\"col-span-6\">\n                          <button\n                            className=\"text-black bg-primary-700 hover:bg-primary-800 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800 focus:!ring-2 p-0 font-medium rounded-lg\"\n                            type=\"submit\"\n                          >\n                            <span className=\"flex items-center rounded-md text-sm px-3 py-2\">\n                              Save all\n                            </span>\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </>\n              );\n            }",
    "SessionsComponent": "import React from \"react\";\nimport CodeShowCase from \"../CodeShowCase\";\nimport ToggleSwich from \"../ToggleSwich\";\nimport { useState } from \"react\";\n\nconst SessionsComponent = () => {\n  const array_of_obj = [\n    {\n      head: \"California 123.123.123.123\",\n      litleHead: \"Chrome on macOS\",\n      svg_D:\n        \"M3 5a2 2 0 012-2h10a2 2 0 012 2v8a2 2 0 01-2 2h-2.22l.123.489.804.804A1 1 0 0113 18H7a1 1 0 01-.707-1.707l.804-.804L7.22 15H5a2 2 0 01-2-2V5zm5.771 7H5V5h10v7H8.771z\",\n    },\n    {\n      head: \"yeden tv\",\n      litleHead: \"Safari on iPhone\",\n      svg_D:\n        \"M7 2a2 2 0 00-2 2v12a2 2 0 002 2h6a2 2 0 002-2V4a2 2 0 00-2-2H7zm3 14a1 1 0 100-2 1 1 0 000 2z\",\n    },\n    {\n      head: \"Rome 24.456.355.98\",\n      litleHead: \"Safari on iPhone\",\n      svg_D:\n        \"M7 2a2 2 0 00-2 2v12a2 2 0 002 2h6a2 2 0 002-2V4a2 2 0 00-2-2H7zm3 14a1 1 0 100-2 1 1 0 000 2z\",\n    },\n  ];\n\n  const [displaycode, setDisplaycode] = useState(true);\n  if (displaycode) {\n    return (\n      <>\n        <ToggleSwich\n          setDisplaycode={setDisplaycode}\n          displaycode={displaycode}\n        />\n        <div className=\"flex h-full flex-col justify-center gap-4 p-6\">\n          <div className=\"flow-root\">\n            <h3 className=\"text-xl font-bold dark:text-white\">Sessions</h3>\n            <ul className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              {array_of_obj.map((element) => {\n                return (\n                  <li key={element.head} className=\"py-4\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"shrink-0\">\n                        <svg\n                          stroke=\"currentColor\"\n                          fill=\"currentColor\"\n                          strokeWidth=\"0\"\n                          viewBox=\"0 0 20 20\"\n                          className=\"text-2xl dark:text-white\"\n                          height=\"1em\"\n                          width=\"1em\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d={element.svg_D}\n                            clipRule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      </div>\n                      <div className=\"min-w-0 flex-1\">\n                        <p className=\"truncate text-base font-semibold text-gray-900 dark:text-white\">\n                          {element.head}\n                        </p>\n                        <p className=\"truncate text-sm font-normal text-gray-500 dark:text-gray-400\">\n                          {element.litleHead}\n                        </p>\n                      </div>\n                      <div className=\"inline-flex items-center\">\n                        <button\n                          className=\"text-gray-900 bg-white border border-gray-200 hover:bg-gray-100 hover:text-blue-700 disabled:hover:bg-white focus:ring-blue-700 focus:text-blue-700 dark:bg-transparent dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700  dark:disabled:hover:bg-gray-800 focus:!ring-2 p-0 font-medium rounded-lg\"\n                          type=\"button\"\n                          onClick={() => console.log(element.head)}\n                        >\n                          <span className=\"flex items-center rounded-md text-sm px-3 py-2\">\n                            Revoke\n                          </span>\n                        </button>\n                      </div>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </>\n    );\n  }",
    "UpperProfile": " <>\n      <ToggleSwich\n          setDisplaycode={setDisplaycode}\n          displaycode={displaycode}\n        />\n        <div className=\"bg-[url(https://rb.gy/0t2u0m)] bg-no-repeat bg-cover bg-center h-fit w-full rounded-lg border-2 border-indigo-500  p-4 text-center shadow-lg dark:bg-gray-800\">\n          <figure className=\"mx-auto mb-4 flex h-16 w-16 items-center justify-center rounded-full bg-indigo-500 dark:bg-indigo-600\">\n            <img\n              src=\"https://rb.gy/0t2u0m\"\n              alt=\"\"\n              className=\"rounded-full h-full w-full\"\n            />\n\n            <figcaption className=\"sr-only\">John Doe, Web Developer</figcaption>\n          </figure>\n          <h2 className=\"mt-4 text-xl font-bold text-indigo-600 dark:text-indigo-400\">\n            John Doe\n          </h2>\n          <p className=\"mb-4 text-gray-600 dark:text-gray-300\">Web Developer</p>\n          <div className=\"flex items-center justify-center\">\n            <a\n              href=\"#\"\n              className=\"rounded-full bg-indigo-600 px-4 py-2 text-white hover:bg-indigo-700 dark:bg-indigo-400 dark:hover:bg-indigo-500\"\n            >\n              Contact\n            </a>\n            <a\n              href=\"#\"\n              className=\"ml-4 rounded-full bg-gray-300 px-4 py-2 hover:bg-gray-400 dark:bg-gray-700 dark:hover:bg-gray-600\"\n            >\n              Portfolio\n            </a>\n          </div>\n        </div>\n      </>",
    "AxiosGet": "import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport ToggleSwich from \"../../components/ToggleSwich\";\nimport CodeShowCase from \"../../components/CodeShowCase\";\n\n\nfunction AxiosGet() {\n  const [Data, setData] = useState({});\n  const [displaycode, setDisplaycode] = useState(true);\n\n  try {\n    useEffect(() => {\n      const fetchData = async () => {\n        const response = await axios.get(\n          \"https://rickandmortyapi.com/api/character\"\n        );\n\n        setData(response.data);\n      };\n      // if u wnat to active the condishinal rendering comment  fetchData();\n\n      fetchData();\n    }, []);\n  } catch (err) {\n    console.log(err);\n  }\n\n  function isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n  if (displaycode) {\n    if (isEmpty(Data)) {\n      return (\n        <>\n          \n          <div className=\"flex justify-center items-center \">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-900\"></div>\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <ToggleSwich\n            setDisplaycode={setDisplaycode}\n            displaycode={displaycode}\n          />\n          <button className=\"btn-primary\" onClick={() => console.log(Data)}>\n            console.log(APIData)\n          </button>\n          <img src={Data.results[1].image} />\n        </>\n      );\n    }",
    "AxiosPost": "import axios from \"axios\";\n  import { useRef } from \"react\";\n  // JSON server is used here\n  function AxiosPost() {\n    \n    const JSONserver = \"http://localhost:3000/posts\";\n  \n    const sendingData = { Name: \"roi\", lastName: \"revivo\" };\n    const input=useRef()\n  \n  \n    const postData = (input) => {\n      try{\n      const sendObj={vlaue:input.current.value}\n      \n      axios\n        .post(JSONserver, sendObj)\n        .then((res) => {\n          console.log(res);\n        })\n        .catch((err) => {console.log(err)});\n      }catch(errr){\n        console.log(errr);\n      }\n    };\n    \n      const fetchData = async () => {\n        const response = await axios.get(JSONserver);\n        console.log(response.data);\n      };\n      \n     \n    \n  \n    return (\n      <>\n        \n        <input  ref={input} type=\"text\" className=\"input-primary w-50\" />\n        <button  onClick={() => postData(input)} className=\"btn-primary\">\n          post data\n        </button>\n        <button  className=\"btn-primary\" onClick={() =>fetchData() }>console.log(Data)</button>\n      </>\n    );\n  }\n  \n  export default AxiosPost;",
    "TailwindDarkmodeBtn": "import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nfunction TailwindDarkmodeBtn() {\n  const [theme, setheme] = useState(\"Light\");\n  const dark = useRef();\n\n  useEffect(() => {\n    // in index.html on the body we add className \"dark\"\n    if (theme === \"dark\") {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n  }, [theme]);\n\n  const handeldarkmode = () => {\n    setheme(theme === \"dark\" ? \"Light\" : \"dark\");\n  };\n  return (\n    <button\n      ref={dark}\n      onClick={handeldarkmode}\n      className=\"cursor-pointer py-2 px-4 bg-yellow-500 text-white font-semibold dark\"\n    >\n      dark modebtn\n    </button>\n  );\n}\n\nexport default TailwindDarkmodeBtn;",
    "custumBTN": "<button className=\"btn-primary dark:bg-black\">custum btn</button>`+\"\\n\"+`in index.css/////////`+\"\\n\"+`@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer components {\n  /* heare we applay custem classname  */\n  .btn-primary {\n    @apply py-2 px-4 bg-blue-500 text-white font-semibold rounded-lg shadow-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75;\n  }",
    "UseCallback": "import { useState, useCallback } from \"react\";\nimport UseCallbackTodo from \"./UseCallbackTodo\";\n\nfunction UseCallback() {\n  const [count, setCount] = useState(0);\n  const [todos, setTodos] = useState([]);\n\n  const increment = () => {\n    setCount((c) => c + 1);\n  };\n\n  // to understand the benefit of useing usecallback func\n  // switch between addTodo func and see which componnent is render\n\n  // const addTodo = () => {\n  //   setTodos((t) => [...t, \"New Todo\"]);\n  // };\n\n  const addTodo = useCallback(() => {\n    setTodos((t) => [...t, \"New Todo\"]);\n  }, [todos]);\n\n  return (\n    <>\n      <span>\n        when the UseCallback componnent is render the addTodo is activet the\n        seter that case a chage in the todo and then the react detect a chage in\n        the todo compenent and it re rendr <hr></hr>\n      </span>\n      <span>\n        with the using of usecallback depedensy we can control the seter then the todo compenenent isnt render because there is no chage   \n      </span>\n      <UseCallbackTodo todos={todos} addTodo={addTodo} />\n      <hr />\n      <div>\n        Count: {count}\n        <button onClick={increment}>+</button>\n      </div>\n    </>\n  );\n}\n\nexport default UseCallback;\n",
    "UseCallbackTodo": "import React from \"react\";\nimport { memo } from \"react\";\n\nfunction UseCallbackTodo({ todos, addTodo }) {\n  console.log(\"child render\");\n  return (\n    <>\n      <h2>My Todos</h2>\n      {todos.map((todo, index) => {\n        return <p key={index}>{todo}</p>;\n      })}\n      <button onClick={addTodo}>Add Todo</button>\n    </>\n  );\n}\n\nexport default memo(UseCallbackTodo);\n",
    "CloudinerySecWay": "import React, { useRef, useEffect } from \"react\";\nimport CodeShowCase from \"../../components/CodeShowCase\";\n\nfunction CloudinerySecWay() {\n  const cloudName = \"sxbyje53\";\n  const uploadPreset = \"dqesb3ey9\";\n  const cloudinaryRef = useRef();\n  const widgetRef = useRef();\n  useEffect(() => {\n    cloudinaryRef.current = window.cloudinary;\n    widgetRef.current = cloudinaryRef.current.createUploadWidget({\n      cloudName,\n      uploadPreset,\n      function(error, result) {\n        console.log(result);\n      },\n    });\n    console.log(cloudinaryRef.current);\n  }, []);\n  function handleUplode() {\n    widgetRef.current.open();\n  }\n\n  return (\n    <>\n    <button className=\"btn-primary\" onClick={() => handleUplode()}>\n      upload\n    </button>\n    <CodeShowCase/>\n    </>\n  );\n}\n\nexport default CloudinerySecWay;\n",
    "UploadWidget": "import axios from \"axios\";\n  import React, { useState } from \"react\";\n  \n  function UploadWidget() {\n    const [selectedImage, setSelectedImage] = useState(null);\n    const [url, setUrl] = useState(\"\");\n  \n    const presetKey = \"sxbyje53\";\n    const cloudName = \"dqesb3ey9\";\n  \n    const handleFile = (event) => {\n      setSelectedImage(event.target.files[0]);\n    };\n  \n    const uploadImg = () => {\n      if (selectedImage) {\n        const data = new FormData();\n        data.append(\"file\", selectedImage);\n        data.append(\"upload_preset\", presetKey);\n  \n        axios\n          .post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, data)\n          .then((res) => setUrl(res))\n          .catch((error) => console.error(error));\n      }\n    };\n  \n    return (\n      <>\n        <div className=\"flex flex-col gap-5\">\n          <input type=\"file\" onChange={handleFile} />\n          <button className=\"btn-primary\" onClick={() => uploadImg()}>\n            Upload\n          </button>\n          <br />\n          <button className=\"btn-primary\" onClick={() => console.log(url)}>\n            Log URL\n          </button>\n          {url && <img src={url.data.secure_url} alt=\"pls enter an img\" />}\n        </div>\n      </>\n    );\n  }\n  \n  \n  export default UploadWidget;\n  ",
    "inputFind": "from selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nimport time\n\n\nPATH = \"webdeiver path\"\nservice = Service(executable_path=PATH)\n\n# Create a Chrome WebDriver instance\ndriver = webdriver.Chrome(service=service)\n\n# Open Google Chrome\ndriver.get(\"http://localhost:5173/selnium\")\ninputElement = driver.find_element(By.ID, \"input\")\ntextElement = driver.find_element(By.ID, \"test\")\ntextElement.text\nprint(textElement.text)\n# way to send keyies to the serch bar\ninputElement.send_keys(\"value we want to send\"+Keys.ENTER)\ntime.sleep(10)\ndriver(quit)",
    "chagePasswordSelenium": "from selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nimport time\nPATH = \"C:\\Program Files (x86)\\chromedriver.exe\"\nservice=Service(executable_path=PATH)\ndriver=webdriver.Chrome(service=service)\ndriver.get(\"http://localhost:5173/\")\n\nmenuBtn=driver.find_element(By.CSS_SELECTOR,\"#root > header > nav > div.flex.lg\\:hidden > button\")\nmenuBtn.click()\nprofileBtn=driver.find_element(By.LINK_TEXT,\"Profile\")\nprofileBtn.click()\nSettingeBtn=driver.find_element(By.LINK_TEXT,\"Setting\")\nSettingeBtn.click()\n\nCurentpasswoed=driver.find_element(By.NAME,\"current-password\")\nCurentpasswoed.send_keys(\"curent pass word\",Keys.RETURN)\n\nNewPassword=driver.find_element(By.NAME,\"new-password\")\nNewPassword.send_keys(\"NewPassword\",Keys.RETURN)\n\nverfiyPassword=driver.find_element(By.NAME,\"confirm_password\")\nverfiyPassword.send_keys(\"NewPassword\",Keys.RETURN)\n\nSubmitBtn=driver.find_element(By.CSS_SELECTOR,\"#root > div:nth-child(7) > div > form > div > div:nth-child(5) > button\")\nSubmitBtn.click()\n\n\n\n\n\ntime.sleep(10)\nquit(driver)\n\n",
    "ExplictWait": "from selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.webdriver.support.ui import WebDriverWait\n\n\n\nPATH = \"C:Program Files (x86)chromedriver.exe\"\nservice=Service(executable_path=PATH)\n\n\n\n# Create a Chrome WebDriver instance\ndriver = webdriver.Chrome(service=service)\n\n# Open Google Chrome\ndriver.get(\"http://127.0.0.1:5500/waits/page_with_slow_image.html\")\n\nimgElement=WebDriverWait(driver,10).until(EC.visibility_of_all_elements_located((By.ID,'the_slow_image')))\n\n\n\n\nprint(\"found img\")",
    "implicitly_wait": "from selenium import webdriver\nfrom selenium.webdriver.chrome.service import Service\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\n\n\nPATH = \"C:\\Program Files (x86)\\chromedriver.exe\"\nservice=Service(executable_path=PATH)\n\n\n\n# Create a Chrome WebDriver instance\ndriver = webdriver.Chrome(service=service)\n# Implicit Waits\n\ndriver.implicitly_wait(10)\n\n# Open Google Chrome\ndriver.get(\"http://localhost:5173/selnium\")\n# its cannot find the element because the element dosent load at the time of the serch \nimgElement=driver.find_element(By.ID,\"the_slow_image\")\n\nprint(\"found img\")",
    "Login": "import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction Login() {\n  \n  // All this forms using react hook forms\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      Username: \"\",\n      password: \"\",\n    },\n  });\n  return (\n    \n    <div className=\"w-full max-w-xs m-9 \">\n      <form\n        onSubmit={handleSubmit((data) => console.log(data))}\n        className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 dark:bg-black\"\n      >\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n            Username\n          </label>\n          <span className=\"text-red-500 text-xs italic\">\n            {errors.password && \"Please choose a username.\"}\n          </span>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"username\"\n            type=\"text\"\n            placeholder=\"Username\"\n            {...register(\"Username\", {\n              required: \"Username is required\",\n              validate: {\n                isvalid: (v) => true,\n              },\n            })}\n          />\n        </div>\n\n        <div className=\"mb-6\">\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n            Password\n          </label>\n          <input\n            className=\"shadow appearance-noneborder-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"******************\"\n            {...register(\"password\", { required: \"the password is required\" })}\n          />\n          <span className=\"text-red-500 text-xs italic\">\n            {errors.password && \"Please choose a password.\"}\n          </span>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <button\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            type=\"submit\"\n          >\n            Sign In\n          </button>\n          <a\n            className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\"\n            href=\"#\"\n          >\n            Forgot Password?\n          </a>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n",
    "Register": "import React from \"react\";\n\nimport { useForm } from \"react-hook-form\";\n\nfunction Register() {\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      Username: \"\",\n      password: \"\",\n      email: \"\",\n      Degree: [],\n    },\n  });\n  function validateEmail(email) {\n    // Regular expression for a basic email validation\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    // Use the test method to check if the email matches the pattern\n    return emailPattern.test(email);\n  }\n  function validatePassword(password) {\n    // Regular expressions for password validation\n    const lowercasePattern = /[a-z]/;\n    const uppercasePattern = /[A-Z]/;\n    const numberPattern = /[0-9]/;\n\n    // Check if the password meets the criteria\n    return (\n      lowercasePattern.test(password) &&\n      uppercasePattern.test(password) &&\n      numberPattern.test(password)\n    );\n  }\n  function containsLettersAndNumbers(username) {\n    const letterPattern = /[a-zA-Z]/;\n    const numberPattern = /[0-9]/;\n\n    return letterPattern.test(username) && numberPattern.test(username);\n  }\n\n  return (\n    <div className=\"relative flex flex-col rounded-xl bg-cyan-50 bg-transparent bg-clip-border text-gray-700 shadow-none items-center \">\n      <h4 className=\"text-blue-gray-900 block font-sans text-2xl font-semibold leading-snug tracking-normal antialiased\">\n        Sign Up\n      </h4>\n\n      <p className=\"mt-1 block font-sans text-base font-normal leading-relaxed text-gray-700 antialiased\">\n        Enter your details to register.\n      </p>\n      <form\n        onSubmit={handleSubmit((data) => setInput(data))}\n        className=\"mb-2 mt-8 w-80 max-w-screen-lg sm:w-96\"\n      >\n        <div className=\"mb-4 flex flex-col gap-6\">\n          {/* username */}\n          <div className=\"relative h-11 w-full min-w-[200px]\">\n            <input\n              className=\"border-blue-gray-200 text-blue-gray-700 placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 disabled:bg-blue-gray-50 peer h-full w-full rounded-md border border-t-transparent bg-transparent px-3 py-3 font-sans text-sm font-normal outline outline-0 transition-all placeholder-shown:border focus:border-2 focus:border-pink-500 focus:border-t-transparent focus:outline-0 disabled:border-0\"\n              {...register(\"Username\", {\n                required: \"Username is required\",\n                validate: {\n                  maxLength: (v) =>\n                    v.length < 20 ||\n                    \"the Username shold be lower than 20 chars\",\n                  minLength: (v) =>\n                    v.length > 4 ||\n                    \"the username need to be higher than 4 chars\",\n                  pattern: (v) =>\n                    containsLettersAndNumbers(v) ||\n                    \"the username need to contain letters and numbers\",\n                  exsistingUser: (v) =>\n                    !UserLocalStorege?.some(\n                      (element) => element.Username === v\n                    ) || \"this Username is alrady taken\",\n                },\n              })}\n            />\n            {errors.Username?.message && (\n              <span className=\"text-red-500\">{errors.Username.message}</span>\n            )}\n            <label className=\"before:content[' '] after:content[' '] text-blue-gray-400 before:border-blue-gray-200 after:border-blue-gray-200 peer-placeholder-shown:text-blue-gray-500 peer-disabled:peer-placeholder-shown:text-blue-gray-500 pointer-events-none absolute -top-1.5 left-0 flex h-full w-full select-none text-[11px] font-normal leading-tight transition-all before:pointer-events-none before:mr-1 before:mt-[6.5px] before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-l before:border-t before:transition-all after:pointer-events-none after:ml-1 after:mt-[6.5px] after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-r after:border-t after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[4.1] peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-pink-500 peer-focus:before:border-l-2 peer-focus:before:border-t-2 peer-focus:before:!border-pink-500 peer-focus:after:border-r-2 peer-focus:after:border-t-2 peer-focus:after:!border-pink-500 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent\">\n              Username\n            </label>\n          </div>\n          {/* email */}\n          <div className=\"relative h-11 w-full min-w-[200px]\">\n            <input\n              className=\"border-blue-gray-200 text-blue-gray-700 placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 disabled:bg-blue-gray-50 peer h-full w-full rounded-md border border-t-transparent bg-transparent px-3 py-3 font-sans text-sm font-normal outline outline-0 transition-all placeholder-shown:border focus:border-2 focus:border-pink-500 focus:border-t-transparent focus:outline-0 disabled:border-0\"\n              {...register(\"email\", {\n                required: \"email is required\",\n                validate: {\n                  minLength: (v) => v.length < 50 || \"too many chars\",\n                  pattern: (v) => validateEmail(v) || \"this is not an email \",\n                },\n              })}\n            />\n            {errors.email?.message && (\n              <span className=\"text-red-500\">{errors.email.message}</span>\n            )}\n\n            <label className=\"before:content[' '] after:content[' '] text-blue-gray-400 before:border-blue-gray-200 after:border-blue-gray-200 peer-placeholder-shown:text-blue-gray-500 peer-disabled:peer-placeholder-shown:text-blue-gray-500 pointer-events-none absolute -top-1.5 left-0 flex h-full w-full select-none text-[11px] font-normal leading-tight transition-all before:pointer-events-none before:mr-1 before:mt-[6.5px] before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-l before:border-t before:transition-all after:pointer-events-none after:ml-1 after:mt-[6.5px] after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-r after:border-t after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[4.1] peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-pink-500 peer-focus:before:border-l-2 peer-focus:before:border-t-2 peer-focus:before:!border-pink-500 peer-focus:after:border-r-2 peer-focus:after:border-t-2 peer-focus:after:!border-pink-500 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent\">\n              Email\n            </label>\n          </div>\n          {/* password */}\n          <div className=\"relative h-11 w-full min-w-[200px]\">\n            <input\n              {...register(\"password\", {\n                required: \"passowrd is required\",\n                validate: {\n                  pattern: (v) =>\n                    validatePassword(v) ||\n                    \"the password shold contain capital letters numbers and regular letters\",\n                },\n              })}\n              type=\"password\"\n              className=\"border-blue-gray-200 text-blue-gray-700 placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 disabled:bg-blue-gray-50 peer h-full w-full rounded-md border border-t-transparent bg-transparent px-3 py-3 font-sans text-sm font-normal outline outline-0 transition-all placeholder-shown:border focus:border-2 focus:border-pink-500 focus:border-t-transparent focus:outline-0 disabled:border-0\"\n            />\n            {errors.password?.message && (\n              <span className=\"text-red-500\">{errors.password.message}</span>\n            )}\n            <label className=\"before:content[' '] after:content[' '] text-blue-gray-400 before:border-blue-gray-200 after:border-blue-gray-200 peer-placeholder-shown:text-blue-gray-500 peer-disabled:peer-placeholder-shown:text-blue-gray-500 pointer-events-none absolute -top-1.5 left-0 flex h-full w-full select-none text-[11px] font-normal leading-tight transition-all before:pointer-events-none before:mr-1 before:mt-[6.5px] before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-l before:border-t before:transition-all after:pointer-events-none after:ml-1 after:mt-[6.5px] after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-r after:border-t after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[4.1] peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-pink-500 peer-focus:before:border-l-2 peer-focus:before:border-t-2 peer-focus:before:!border-pink-500 peer-focus:after:border-r-2 peer-focus:after:border-t-2 peer-focus:after:!border-pink-500 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent \">\n              Password\n            </label>\n          </div>\n          {/* degree */}\n          <h1>choose your title</h1>\n        </div>\n\n        <button\n          className=\"mt-6 block w-full select-none rounded-lg bg-pink-500 px-6 py-3 text-center align-middle font-sans text-xs font-bold uppercase text-white shadow-md shadow-pink-500/20 transition-all hover:shadow-lg hover:shadow-pink-500/40 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none\"\n          type=\"submit\"\n          data-ripple-light=\"true\"\n        >\n          Register\n        </button>\n        <p className=\"mt-4 block text-center font-sans text-base font-normal leading-relaxed text-gray-700 antialiased\">\n          Already have an account?\n          {/*Link  */}\n          <span\n            className=\"cursor-pointer font-medium text-blue-500 transition-colors hover:text-blue-700\"\n            onClick={() => {\n              LogIn_nav(\"#\");\n            }}\n          >\n            LogIn\n          </span>\n        </p>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n",
    "ShopingAdressForm": "import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nfunction ShopingAdressForm() {\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      address: \"\",\n      Username: \"\",\n      state: \"\",\n      Country: \"\",\n      zip: \"\",\n    },\n  });\n  function isZipCode(str) {\n    return /^\\d(-\\d)?$/.test(str);\n  }\n  return (\n    <>\n      <div className=\"mt-4 flex flex-col bg-gray-100 rounded-lg p-4 shadow-sm\">\n        <h2 className=\"text-black font-bold text-lg\">\n          Shipping Label Address Form\n        </h2>\n        <form onSubmit={handleSubmit((data) => console.log(data))}>\n          <div className=\"mt-4\">\n            <label className=\"text-black\">Name</label>\n            <input\n              placeholder=\"Username\"\n              className=\"w-full bg-white rounded-md border-gray-300 text-black px-2 py-1\"\n              type=\"text\"\n              {...register(\"Username\", {\n                required: \"Username is required\",\n                validate: {},\n              })}\n            />\n          </div>\n\n          <div className=\"mt-4\">\n            <label className=\"text-black\">Address</label>\n            <textarea\n              placeholder=\"Your address\"\n              className=\"w-full bg-white rounded-md border-gray-300 text-black px-2 py-1\"\n              id=\"address\"\n              {...register(\"address\")}\n            ></textarea>\n          </div>\n\n          <div className=\"mt-4 flex flex-row space-x-2\">\n            <div className=\"flex-1\">\n              <label className=\"text-black\">City</label>\n              <input\n                placeholder=\"Your city\"\n                className=\"w-full bg-white rounded-md border-gray-300 text-black px-2 py-1\"\n                id=\"city\"\n                type=\"text\"\n                {...register(\"city\")}\n              />\n            </div>\n\n            <div className=\"flex-1\">\n              <label className=\"text-black\">State</label>\n              <input\n                placeholder=\"Your state\"\n                className=\"w-full bg-white rounded-md border-gray-300 text-black px-2 py-1\"\n                id=\"state\"\n                type=\"text\"\n                {...register(\"state\")}\n              />\n            </div>\n          </div>\n\n          <div className=\"mt-4 flex flex-row space-x-2\">\n            <div className=\"flex-1\">\n              <label className=\"text-black\">ZIP</label>\n              <input\n                placeholder=\"Your ZIP code\"\n                className=\"w-full bg-white rounded-md border-gray-300 text-black px-2 py-1\"\n                type=\"text\"\n                {...register(\"zip\", { required: \"zip code is required\" })}\n              />\n            </div>\n\n            <div className=\"flex-1\">\n              <label className=\"text-black\">Country</label>\n              <select\n                className=\"w-full bg-white rounded-md border-gray-300 text-black px-2 py-1\"\n                {...register(\"Country\")}\n              >\n                <option value=\"\">Select a country</option>\n                <optgroup label=\"Africa\">\n                  <option value=\"Afghanistan\">Afghanistan</option>\n                  <option value=\"Algeria\">Algeria</option>\n                  <option value=\"Angola\">Angola</option>\n                  ...\n                  <option value=\"ZW\">Zimbabwe</option>\n                </optgroup>\n                <optgroup label=\"Asia\">\n                  <option value=\"AM\">Armenia</option>\n                  <option value=\"AZ\">Azerbaijan</option>\n                  <option value=\"BH\">Bahrain</option>\n                  ...\n                  <option value=\"YE\">Yemen</option>\n                </optgroup>\n                <optgroup label=\"South America\">\n                  <option value=\"AR\">Argentina</option>\n                  <option value=\"BO\">Bolivia</option>\n                  <option value=\"BR\">Brazil</option>\n                  ...\n                  <option value=\"VE\">Venezuela</option>\n                </optgroup>\n                ...\n              </select>\n            </div>\n          </div>\n\n          <div className=\"mt-4 flex justify-end\">\n            <button\n              className=\"bg-white text-black rounded-md px-4 py-1 hover:bg-gray-200 hover:text-gray-900\"\n              type=\"submit\"\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default ShopingAdressForm;\n"
    ,"LocalStorege":"import React from \"react\";\nimport { useRef, useState,useEffect } from \"react\";\n\nfunction LocalStorege() {\n  const Input = useRef();\n  const [inputData, setInputData] = useState(localStorage.getItem(\"key\"));\n  function handleCklick(data) {\n    setInputData(data.current.value)\n  }\n//   storing data\n  useEffect(() => {\n    localStorage.setItem(\"key\",JSON.stringify(inputData))\n  \n  }, [handleCklick])\n//   extaracting data\nfunction exstactingData() {\n    const localstoregeData=JSON.parse(localStorage.getItem(\"key\"))\n    console.log(localstoregeData);\n}\n// removeData\nfunction removedata() {\n    localStorage.removeItem(\"key\")\n    // after active press the extact data \n\n}\n  \n\n\n  return (\n   \n      <div className=\"bg-dark-100 w-100% h-100%\">\n        <div className=\"flex flex-col h-4 w-fit gap-7\">\n        <span>Enter stuff to Local Sotorege</span>\n        <input\n        placeholder=\"This data going to the localStorege\"\n          ref={Input}\n          className=\"border-black border bg-cyan-100\"\n          type=\"text\"\n        />\n        <button onClick={()=>handleCklick(Input)}  className=\"btn-primary bg bg-red-900\">Send Data</button>\n        <button onClick={()=>console.log(inputData)} className=\"btn-primary\">Test</button>\n        <button onClick={()=>exstactingData()} className=\"btn-primary\">extarct data</button>\n        <button onClick={()=>removedata()} className=\"btn-primary\">removeData</button>\n        </div>\n      </div>\n    \n  );\n}\n\nexport default LocalStorege;\n"
    

    
    
    
  }
}


